import React, { useState, useEffect } from "react";
import { apiRequests } from "../../shared/api/apiRequests";
import { canExport, canBackup, canViewPayments } from "../../shared/utils/roleUtils";
import styles from "./ExportComponent.module.scss";

export const ExportComponent = () => {
  const [loading, setLoading] = useState(false);
  const [statistics, setStatistics] = useState(null);
  const [backups, setBackups] = useState([]);
  const [activeTab, setActiveTab] = useState("csv"); // csv, backup

  useEffect(() => {
    loadStatistics();
    if (canBackup()) {
      loadBackups();
    }
  }, []);

  const loadStatistics = async () => {
    try {
      const response = await apiRequests.export.statistics();
      setStatistics(response.data);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", error);
    }
  };

  const loadBackups = async () => {
    try {
      const response = await apiRequests.export.listBackups();
      setBackups(response.data.backups || []);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±—ç–∫–∞–ø–æ–≤:", error);
    }
  };

  const downloadFile = (blob, filename) => {
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = filename;
    document.body.appendChild(a);
    a.click();
    window.URL.revokeObjectURL(url);
    document.body.removeChild(a);
  };

  const handleExportUsers = async () => {
    if (!canExport()) {
      alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞");
      return;
    }

    setLoading(true);
    try {
      const response = await apiRequests.export.usersCsv();
      downloadFile(response.data, `users_export_${new Date().toISOString().split("T")[0]}.csv`);
      alert("–≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω!");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π");
    } finally {
      setLoading(false);
    }
  };

  const handleExportOrders = async () => {
    if (!canExport() || !canViewPayments()) {
      alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö");
      return;
    }

    setLoading(true);
    try {
      const response = await apiRequests.export.ordersCsv();
      downloadFile(response.data, `orders_export_${new Date().toISOString().split("T")[0]}.csv`);
      alert("–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–∫–∞–∑–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –∑–∞–∫–∞–∑–æ–≤:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –∑–∞–∫–∞–∑–æ–≤");
    } finally {
      setLoading(false);
    }
  };

  const handleExportPaymentLogs = async () => {
    if (!canViewPayments()) {
      alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö");
      return;
    }

    setLoading(true);
    try {
      const response = await apiRequests.export.paymentLogsCsv();
      downloadFile(response.data, `payment_logs_export_${new Date().toISOString().split("T")[0]}.csv`);
      alert("–≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω!");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ª–æ–≥–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ª–æ–≥–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π");
    } finally {
      setLoading(false);
    }
  };

  const handleExportAdminLogs = async () => {
    if (!canExport()) {
      alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞");
      return;
    }

    setLoading(true);
    try {
      const response = await apiRequests.export.adminLogsCsv();
      downloadFile(response.data, `admin_logs_export_${new Date().toISOString().split("T")[0]}.csv`);
      alert("–≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ª–æ–≥–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ª–æ–≥–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤");
    } finally {
      setLoading(false);
    }
  };

  const handleCreateBackup = async () => {
    if (!canBackup()) {
      alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞");
      return;
    }

    if (!window.confirm("–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö? –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.")) {
      return;
    }

    setLoading(true);
    try {
      const response = await apiRequests.export.createBackup();
      alert(`–ë—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n–§–∞–π–ª: ${response.data.filename}\n–†–∞–∑–º–µ—Ä: ${response.data.size_mb} MB`);
      loadBackups();
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞");
    } finally {
      setLoading(false);
    }
  };

  const handleRestoreBackup = async (backupFilename) => {
    if (!canBackup()) {
      alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±—ç–∫–∞–ø–∞");
      return;
    }

    if (!window.confirm(`–í–ù–ò–ú–ê–ù–ò–ï! –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞ ${backupFilename} –∑–∞–º–µ–Ω–∏—Ç –≤—Å–µ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?`)) {
      return;
    }

    setLoading(true);
    try {
      await apiRequests.export.restoreBackup(backupFilename);
      alert("–ë—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –±—ç–∫–∞–ø–∞:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –±—ç–∫–∞–ø–∞");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className={styles.exportContainer}>
      <h2>üì• –≠–∫—Å–ø–æ—Ä—Ç –∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>

      <div className={styles.tabs}>
        <button
          className={activeTab === "csv" ? styles.active : ""}
          onClick={() => setActiveTab("csv")}
        >
          –≠–∫—Å–ø–æ—Ä—Ç CSV
        </button>
        {canBackup() && (
          <button
            className={activeTab === "backup" ? styles.active : ""}
            onClick={() => setActiveTab("backup")}
          >
            –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
          </button>
        )}
      </div>

      {activeTab === "csv" && (
        <div className={styles.csvSection}>
          <h3>–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ CSV</h3>

          {statistics && (
            <div className={styles.statistics}>
              <p>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</p>
              <ul>
                <li>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {statistics.users}</li>
                <li>–ó–∞–∫–∞–∑–æ–≤: {statistics.orders}</li>
                <li>–õ–æ–≥–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π: {statistics.payment_logs}</li>
                <li>–õ–æ–≥–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {statistics.admin_logs}</li>
              </ul>
            </div>
          )}

          <div className={styles.exportButtons}>
            <button
              onClick={handleExportUsers}
              disabled={loading || !canExport()}
              className={styles.exportButton}
            >
              üìä –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            </button>

            {canViewPayments() && (
              <button
                onClick={handleExportOrders}
                disabled={loading || !canExport()}
                className={styles.exportButton}
              >
                üí∞ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–∫–∞–∑–æ–≤
              </button>
            )}

            {canViewPayments() && (
              <button
                onClick={handleExportPaymentLogs}
                disabled={loading}
                className={styles.exportButton}
              >
                üìã –≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π
              </button>
            )}

            <button
              onClick={handleExportAdminLogs}
              disabled={loading || !canExport()}
              className={styles.exportButton}
            >
              üë§ –≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            </button>
          </div>
        </div>
      )}

      {activeTab === "backup" && canBackup() && (
        <div className={styles.backupSection}>
          <h3>–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</h3>

          <div className={styles.backupActions}>
            <button
              onClick={handleCreateBackup}
              disabled={loading}
              className={styles.backupButton}
            >
              üíæ –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø
            </button>
          </div>

          {backups.length > 0 && (
            <div className={styles.backupsList}>
              <h4>–î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:</h4>
              <table className={styles.backupsTable}>
                <thead>
                  <tr>
                    <th>–ò–º—è —Ñ–∞–π–ª–∞</th>
                    <th>–†–∞–∑–º–µ—Ä</th>
                    <th>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</th>
                    <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                  </tr>
                </thead>
                <tbody>
                  {backups.map((backup) => (
                    <tr key={backup.filename}>
                      <td>{backup.filename}</td>
                      <td>{backup.size_mb} MB</td>
                      <td>{new Date(backup.created_at).toLocaleString()}</td>
                      <td>
                        <button
                          onClick={() => handleRestoreBackup(backup.filename)}
                          disabled={loading}
                          className={styles.restoreButton}
                        >
                          –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                        </button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          )}

          {backups.length === 0 && (
            <p className={styles.emptyState}>–ë—ç–∫–∞–ø–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>
          )}
        </div>
      )}

      {loading && (
        <div className={styles.loading}>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      )}
    </div>
  );
};

