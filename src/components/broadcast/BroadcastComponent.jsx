import React, { useState } from "react";
import "./BroadcastComponent.scss";
import { apiRequests } from "../../shared/api/apiRequests";

export const BroadcastComponent = () => {
  const [text, setText] = useState("");
  const [photoUrl, setPhotoUrl] = useState("");
  const [photo, setPhoto] = useState(null);
  const [activeOnly, setActiveOnly] = useState(true);
  const [inactive30Days, setInactive30Days] = useState(false);
  const [selectedUsers, setSelectedUsers] = useState([]);
  const [loading, setLoading] = useState(false);

  const handleSendText = async () => {
    if (!text) {
      alert("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è");
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∑–∞–∏–º–æ–∏—Å–∫–ª—é—á–∞—é—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
    if (activeOnly && inactive30Days) {
      alert("–ù–µ–ª—å–∑—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤—ã–±—Ä–∞—Ç—å '–¢–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏' –∏ '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ 30+ –¥–Ω–µ–π'");
      return;
    }

    setLoading(true);
    try {
      const result = await apiRequests.broadcast.send(
        text,
        photoUrl || null,
        selectedUsers.length > 0 ? selectedUsers : null,
        activeOnly,
        inactive30Days
      );

      const resultData = result.data || result;
      alert(`–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n–í—Å–µ–≥–æ: ${resultData.total_users}\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${resultData.sent}\n–û—à–∏–±–æ–∫: ${resultData.failed}`);
      setText("");
      setPhotoUrl("");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ:", error);
      const errorMsg = error.response?.data?.detail || error.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏";
      alert(`–û—à–∏–±–∫–∞: ${errorMsg}`);
    } finally {
      setLoading(false);
    }
  };

  const handleSendWithPhoto = async () => {
    if (!text) {
      alert("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è");
      return;
    }

    if (!photo) {
      alert("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ");
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 5MB –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
    const maxSize = 5 * 1024 * 1024; // 5MB
    if (photo.size > maxSize) {
      alert(`–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: ${(maxSize / 1024 / 1024).toFixed(0)}MB. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∂–º–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.`);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∑–∞–∏–º–æ–∏—Å–∫–ª—é—á–∞—é—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
    if (activeOnly && inactive30Days) {
      alert("–ù–µ–ª—å–∑—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤—ã–±—Ä–∞—Ç—å '–¢–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏' –∏ '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ 30+ –¥–Ω–µ–π'");
      return;
    }

    setLoading(true);
    try {
      const result = await apiRequests.broadcast.sendWithPhoto(
        text,
        photo,
        selectedUsers.length > 0 ? selectedUsers : null,
        activeOnly,
        inactive30Days
      );

      const resultData = result.data || result;
      alert(`–†–∞—Å—Å—ã–ª–∫–∞ —Å —Ñ–æ—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n–í—Å–µ–≥–æ: ${resultData.total_users}\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${resultData.sent}\n–û—à–∏–±–æ–∫: ${resultData.failed}`);
      setText("");
      setPhoto(null);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ —Å —Ñ–æ—Ç–æ:", error);
      let errorMsg = error.response?.data?.detail || error.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏";
      
      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ 413
      if (error.response?.status === 413) {
        errorMsg = "–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: 20MB. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –∏–ª–∏ —Å–æ–∂–º–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.";
      }
      
      alert(`–û—à–∏–±–∫–∞: ${errorMsg}`);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="broadcast-container">
      <h2>üìß –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞</h2>

      <div className="broadcast-form">
        <div className="form-section">
          <label>–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</label>
          <textarea
            value={text}
            onChange={(e) => setText(e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"
            rows={6}
          />
        </div>

        <div className="form-section">
          <label>–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):</label>
          <input
            type="text"
            value={photoUrl}
            onChange={(e) => setPhotoUrl(e.target.value)}
            placeholder="https://example.com/photo.jpg"
          />
        </div>

        <div className="form-section">
          <label>
            <input
              type="checkbox"
              checked={activeOnly}
              onChange={(e) => {
                setActiveOnly(e.target.checked);
                if (e.target.checked) setInactive30Days(false);
              }}
            />
            –¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π
          </label>
        </div>

        <div className="form-section">
          <label>
            <input
              type="checkbox"
              checked={inactive30Days}
              onChange={(e) => {
                setInactive30Days(e.target.checked);
                if (e.target.checked) setActiveOnly(false);
              }}
            />
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ 30+ –¥–Ω–µ–π
          </label>
          <p className="hint">
            –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å ‚â•30 –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –∏ –Ω–µ –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É
          </p>
        </div>

        <div className="form-section">
          <label>–í—ã–±—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):</label>
          <input
            type="text"
            placeholder="–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (1,2,3)"
            onChange={(e) =>
              setSelectedUsers(
                e.target.value
                  .split(",")
                  .map((id) => id.trim())
                  .filter(Boolean)
              )
            }
          />
          {selectedUsers.length > 0 && (
            <p className="info">–í—ã–±—Ä–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {selectedUsers.length}</p>
          )}
          <p className="hint">
            –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
          </p>
        </div>

        <div className="form-actions">
          <button onClick={handleSendText} disabled={loading}>
            {loading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç"}
          </button>
          <input
            type="file"
            accept="image/*"
            onChange={(e) => setPhoto(e.target.files[0])}
            style={{ display: "none" }}
            id="photo-input"
          />
          <label htmlFor="photo-input" className="file-button">
            {photo ? `üìé ${photo.name}` : "üìé –í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ"}
          </label>
          {photo && (
            <button onClick={handleSendWithPhoto} disabled={loading}>
              {loading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "üì∏ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å —Ñ–æ—Ç–æ"}
            </button>
          )}
        </div>
      </div>
    </div>
  );
};

